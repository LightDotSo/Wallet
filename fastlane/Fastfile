default_platform(:ios)

#App Store API Key
APPLE_ISSUER_ID = ENV["APPLE_ISSUER_ID"]
APPLE_KEY_ID = ENV["APPLE_KEY_ID"]
APPLE_KEY_CONTENT = ENV["APPLE_KEY_CONTENT"]

# App keys
DEVELOPER_APP_ID = ENV["DEVELOPER_APP_ID"]
PROVISIONING_PROFILE_SPECIFIER = ENV["PROVISIONING_PROFILE_SPECIFIER"]

#Github Keys
GIT_AUTHORIZATION = ENV["GIT_AUTHORIZATION"]

KEYCHAIN_NAME = ENV["TEMP_KEYCHAIN_USER"]
KEYCHAIN_PASSWORD = ENV["TEMP_KEYCHAIN_PASSWORD"]


platform :ios do

  lane :build do
    version = get_version_number(
      xcodeproj: "Application/Light.xcodeproj",
      target: "Light"
    )
    build = get_build_number(
      xcodeproj: "Application/Light.xcodeproj",
    )
    disable_automatic_code_signing(path: "Application/Light.xcodeproj")

    api_key = app_store_connect_api_key(
      key_id: APPLE_KEY_ID,
      issuer_id: APPLE_ISSUER_ID,
      key_content: APPLE_KEY_CONTENT,
      duration: 1200,
      in_house: false
    )
    if is_ci
      create_keychain(
          name: KEYCHAIN_NAME,
          password: KEYCHAIN_PASSWORD,
          default_keychain: true,
          unlock: true,
          timeout: 3600,
          lock_when_sleeps: false
      )
    end

    match(
      keychain_name: KEYCHAIN_NAME,
      keychain_password: KEYCHAIN_PASSWORD,
      git_branch: "main",
      type: 'appstore',
      app_identifier: "io.magic.light",
      git_basic_authorization: Base64.strict_encode64(GIT_AUTHORIZATION),
      readonly: false,
      api_key: api_key
    )
    match(
      keychain_name: KEYCHAIN_NAME,
      keychain_password: KEYCHAIN_PASSWORD,
      git_branch: "main",
      type: 'appstore',
      app_identifier: "io.magic.light.Light-Safari-Extension",
      git_basic_authorization: Base64.strict_encode64(GIT_AUTHORIZATION),
      readonly: false,
      api_key: api_key
    )

    increment_build_number(
      xcodeproj: 'Application/Light.xcodeproj'
    )

    gym(
      configuration: "Release",
      workspace: "Light.xcworkspace",
      scheme: "Light",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          DEVELOPER_APP_ID => PROVISIONING_PROFILE_SPECIFIER
        }
      }
    )

    enable_automatic_code_signing(path: "Application/Light.xcodeproj")
  end

  lane :internal do
    build

    ENV['ITMSTRANSPORTER_FORCE_ITMS_PACKAGE_UPLOAD'] = 'true'

    pilot(
      apple_id: "#{DEVELOPER_APP_ID}",
      app_identifier: "io.magic.light",
      changelog: "Bug fixes and performance improvements",
      skip_waiting_for_build_processing: false,
      skip_submission: true,
      distribute_external: false,
      notify_external_testers: true,
      itc_provider: "4Z47XRX22C",
      team_id: "4Z47XRX22C"
    )
  end

  lane :external do
    build

    changelog = read_changelog(
      section_identifier: '[Unreleased]'
    )

    ENV['ITMSTRANSPORTER_FORCE_ITMS_PACKAGE_UPLOAD'] = 'true'

    pilot(
      apple_id: "#{DEVELOPER_APP_ID}",
      app_identifier: "io.magic.light",
      changelog: changelog,
      skip_waiting_for_build_processing: false,
      skip_submission: true,
      distribute_external: true,
      groups: [
        "External Testers"
      ],
      notify_external_testers: true,
      itc_provider: "4Z47XRX22C",
      team_id: "4Z47XRX22C"
    )

    stamp_changelog(section_identifier: "Build #{build}")
  end

  lane :change_app_icon do
    appicon(
      appicon_image_file: 'Resources/AppIcon--development.png',
      appicon_devices: [:iphone, :ios_marketing],
      appicon_path: 'Application/Light/Resources/Assets.xcassets',
      appicon_name: 'AppIcon-Prod.appiconset'
    )
  end

  desc "Running project tests"
  lane :test do
    run_tests(workspace: "Light.xcworkspace",
              devices: ["iPhone 14"],
              scheme: "Tests")
  end

  desc "Add devices present on devices.txt to provisioning profile"
  lane :update_devices do
    app_store_connect_api_key(
      key_id: APPLE_KEY_ID,
      issuer_id: APPLE_ISSUER_ID,
      key_content: APPLE_KEY_CONTENT,
      duration: 1200,
      in_house: false
    )
    register_devices(devices_file: "./fastlane/devices.txt")
    match(git_branch: "main", app_identifier: ["io.magic.light"], type: "development", force_for_new_devices: true)
  end

  desc "Sync iOS keys and profiles used for development signing"
  lane :match_development do
    app_store_connect_api_key(
      key_id: APPLE_KEY_ID,
      issuer_id: APPLE_ISSUER_ID,
      key_content: APPLE_KEY_CONTENT,
      duration: 1200,
      in_house: false
    )
    match(git_branch: "main", app_identifier: ["io.magic.light", "io.magic.light.Light-Safari-Extension"], type: "development", readonly: is_ci)
  end

  desc "Sync iOS keys and profiles used for AppStore signing"
  lane :match_appstore do
    app_store_connect_api_key(
      key_id: APPLE_KEY_ID,
      issuer_id: APPLE_ISSUER_ID,
      key_content: APPLE_KEY_CONTENT,
      duration: 1200,
      in_house: false
    )
    match(git_branch: "main", app_identifier: ["io.magic.light", "io.magic.light.Light-Safari-Extension"], type: "appstore", readonly: is_ci)
  end
end
