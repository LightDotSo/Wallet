import Domain
import Keychain
import XCTest

final class MessageSignatureTests: XCTestCase {
  func test_personal_signature_encoded_result() throws {
    let testMessage = "hello world".data(using: .utf8)!.toHexString()
    let personalMessageRequest = MessageRequest(message: testMessage, type: .personal)
    let messageSigned = try PersonalMessageRequestSignature(storage: SecureStorageMock()).signed(
      with: personalMessageRequest, wallet: EthereumWallet.walletDefault())
    XCTAssertEqual(
      messageSigned.hex(),
      "0xddd0a7290af9526056b4e35a077b9a11b513aa0028ec6c9880948544508f3c63265e99e47ad31bb2cab9646c504576b3abc6939a1710afc08cbf3034d73214b81c"
    )
  }

  func test_personal_signature_decoded_result() throws {
    let personalMessageRequest = MessageRequest(
      message:
        "0x54776f20726f61647320646976657267656420696e20612079656c6c6f7720776f6f642c0a2020526f626572742046726f737420706f65740a20200a2020416e6420736f727279204920636f756c64206e6f742074726176656c20626f74680a2020416e64206265206f6e652074726176656c65722c206c6f6e6720492073746f6f640a2020416e64206c6f6f6b656420646f776e206f6e6520617320666172206173204920636f756c640a2020546f2077686572652069742062656e7420696e2074686520756e64657267726f7774683b0a20200a20205468656e20746f6f6b20746865206f746865722c206173206a75737420617320666169722c0a2020416e6420686176696e672070657268617073207468652062657474657220636c61696d2c0a202042656361757365206974207761732067726173737920616e642077616e74656420776561723b0a202054686f75676820617320666f722074686174207468652070617373696e672074686572650a202048616420776f726e207468656d207265616c6c792061626f7574207468652073616d652c0a20200a2020416e6420626f74682074686174206d6f726e696e6720657175616c6c79206c61790a2020496e206c6561766573206e6f2073746570206861642074726f6464656e20626c61636b2e0a20204f682c2049206b6570742074686520666972737420666f7220616e6f7468657220646179210a2020596574206b6e6f77696e6720686f7720776179206c65616473206f6e20746f207761792c0a20204920646f756274656420696620492073686f756c64206576657220636f6d65206261636b2e0a20200a202049207368616c6c2062652074656c6c696e6720746869732077697468206120736967680a2020536f6d657768657265206167657320616e6420616765732068656e63653a0a202054776f20726f61647320646976657267656420696e206120776f6f642c20616e642049e280940a20204920746f6f6b20746865206f6e65206c6573732074726176656c65642062792c0a2020416e64207468617420686173206d61646520616c6c2074686520646966666572656e63652e",
      type: .personal)
    let messageSigned = try PersonalMessageRequestSignature(storage: SecureStorageMock()).signed(
      with: personalMessageRequest, wallet: EthereumWallet.walletDefault())
    XCTAssertEqual(
      messageSigned.hex(),
      "0x6f434c9b27382b0bcc6c1c9594eb230c98e2ca0dad5dd6eac8ff4a36af1534164acaab1e745557be9ecfa63cbd0c34cd579e7347c9f50528265fd0e50bd1edf21b"
    )
  }

  func test_typed_signature_decoded_result() throws {
    let personalMessageRequest = MessageRequest(
      message: "0x0a94cf6625e5860fc4f330d75bcd0c3a4737957d2321d1a024540ab5320fe903", type: .typed)
    let messageSigned = try PersonalMessageRequestSignature(storage: SecureStorageMock()).signed(
      with: personalMessageRequest, wallet: EthereumWallet.walletDefault())
    XCTAssertEqual(
      messageSigned.hex(),
      "0xba520752b5122739f6e4cdb8c67a8042e03d1a56976d92894562246c83d193da5530fb31719682662c3ccbc8c32451ce97a0bd9832d2cb68f047a89ed0c486031b"
    )
  }
}
